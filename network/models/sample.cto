/*
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


namespace org.acme.AgrichainNetwork

/**
 * The type of product being Commodity
 */
enum CommodityType {
  o POTATO
  o APPLES
  o STRAWBERRY
  o BLUEBERRY
  o BLUEB
  o WHEAT
  o OAT
}

/**
 * The status of a Asset Status
 */
enum AssetStatus {
  o CREATED
  o IN_TRANSIT
  o SELLING
  o SOLD
}



/**
 * An abstract participant type in this business network
 */
abstract participant Business identified by email {
  o String email
  o String fullname 
  o String cellnumber
  o String password
  o String accountBalance
  o String accountHash
  o String privateKeyHash
  o String SubCategory
  o String Locale
  o String UserRole
}

/**
 * A Producer is a type of participant in the network
 */
participant Producer extends Business {
}

/**
 * A Distributor is a type of participant in the network
 */
participant Distributor extends Business {
}

/**
 * An Consumer is a type of participant in the network
 */
participant Consumer extends Business {
  o Long unitPurchased optional
}

asset AgriAsset identified by agriAssetId {
  o String agriAssetId
  o String created
  o String status
  o String harvestSession
  o String productName
  o String productType
  o String productDescription
  o String HarvestArea
  o String unitPrice
  o String TotalYieldProduced
  o String YieldBalance
  o String InsuranceCost
  o String TotalProductCost
  --> Producer producer
  --> Distributor distributor optional
  --> Consumer[] consumer optional
  o String unitCount optional
}


transaction CreateAssets{
 --> AgriAsset agriasset
 --> Producer producer
 //--> Distributor distributor
}

transaction ReceivedAssets {
 --> AgriAsset agriasset
 //--> Producer producer
 //--> Distributor distributor
}

transaction SellingAssets {
 --> AgriAsset agriasset
 --> Consumer consumer
 --> Distributor distributor
}




